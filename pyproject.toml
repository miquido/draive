[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "draive"
description = "Framework designed to simplify and accelerate the development of LLM-based applications."
version = "0.26.0"
readme = "README.md"
maintainers = [
  { name = "Kacper KaliÅ„ski", email = "kacper.kalinski@miquido.com" },
]
requires-python = ">=3.12"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Typing :: Typed",
  "Topic :: Software Development",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
]
license = { file = "LICENSE" }
dependencies = [
  "numpy~=1.26",
]

[project.urls]
Homepage = "https://miquido.com"
Repository = "https://github.com/miquido/draive.git"

[project.optional-dependencies]
sentencepiece = [
  "sentencepiece~=0.2",
]
fastembed = [
  "fastembed~=0.3.0",
]
openai = [
  "openai~=1.32",
  "tiktoken~=0.7",
]
anthropic = [
  "anthropic~=0.29.0",
]
mistral = [
  "httpx~=0.27",
  "draive[sentencepiece]",
]
gemini = [
  "httpx~=0.27",
  "draive[sentencepiece]",
]
ollama = [
  "httpx~=0.27",
]
mistralrs = [
  "mistralrs~=0.1.19",
]

dev = [
  "draive[sentencepiece]",
  "draive[fastembed]",
  "draive[openai]",
  "draive[anthropic]",
  "draive[mistral]",
  "draive[ollama]",
  "draive[gemini]",
  "ruff~=0.5.0",
  "pyright~=1.1",
  "bandit~=1.7",
  "pytest~=7.4",
  "pytest-cov~=4.1",
  "pytest-asyncio~=0.23.0",
]

[tool.ruff]
target-version = "py312"
line-length = 100
extend-exclude = [".venv", ".git", ".cache"]
lint.select = ["E", "F", "A", "I", "B", "PL", "W", "C", "RUF", "UP"]
lint.ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "E402"]
"./tests/*.py" = ["PLR2004"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["Argument", "draive.Argument"]

[tool.pyright]
pythonVersion = "3.12"
venvPath = "."
venv = ".venv"
include = ["./src"]
exclude = ["**/node_modules", "**/__pycache__"]
ignore = []
stubPath = "./stubs"
reportMissingImports = true
reportMissingTypeStubs = true
typeCheckingMode = "strict"
userFileIndexingLimit = -1
useLibraryCodeForTypes = true

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"*" = ["*.model"]

[tool.setuptools.packages.find]
where = ["src"]
