[build-system]
requires = ["uv_build>=0.8.0,<0.9.0"]
build-backend = "uv_build"

[project]
name = "draive"
description = "Framework designed to simplify and accelerate the development of LLM-based applications."
version = "0.82.0"
readme = "README.md"
maintainers = [
  { name = "Kacper KaliÅ„ski", email = "kacper.kalinski@miquido.com" },
]
requires-python = ">=3.12"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Typing :: Typed",
  "Topic :: Software Development",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Application Frameworks",
]
license = { file = "LICENSE" }
dependencies = ["numpy~=2.2", "haiway~=0.29.0"]

[project.urls]
Homepage = "https://miquido.com"
Repository = "https://github.com/miquido/draive.git"

[project.optional-dependencies]
sentencepiece = ["sentencepiece~=0.2"]
cohere = ["cohere~=5.15"]
cohere_bedrock = ["cohere~=5.13", "boto3~=1.37"]
openai = ["openai~=1.88", "tiktoken~=0.9"]
openai_realtime = ["openai[realtime]~=1.88", "tiktoken~=0.9"]
anthropic = ["anthropic~=0.54", "tokenizers~=0.21"]
anthropic_bedrock = ["anthropic[bedrock]~=0.54", "tokenizers~=0.21"]
mistral = ["sentencepiece~=0.2", "mistralai~=1.8"]
gemini = [
  "sentencepiece~=0.2",
  "google-genai~=1.20",
  "google-api-core~=2.25,<3.0",
]
ollama = ["ollama~=0.5"]
bedrock = ["boto3~=1.38"]
vllm = ["openai~=1.88"]
mcp = ["mcp~=1.9"]
opentelemetry = [
  "haiway[opentelemetry]",
  "opentelemetry-api",
  "opentelemetry-sdk",
  "opentelemetry-exporter-otlp-proto-grpc",
]
httpx = ["haiway[httpx]", "httpx"]
dev = [
  "bandit~=1.8",
  "pyright~=1.1",
  "pytest~=8.3",
  "pytest-asyncio~=0.26",
  "pytest-cov~=6.1",
  "ruff~=0.12",
]
docs = ["mkdocs~=1.6", "mkdocs-material~=9.5", "mkdocstrings[python]~=0.27"]

[tool.ruff]
target-version = "py312"
line-length = 100
extend-exclude = [".venv", ".git", ".cache"]
lint.select = ["E", "F", "A", "I", "B", "PL", "W", "C", "RUF", "UP", "NPY201"]
lint.ignore = ["A005", "PLC0415"]
lint.pydocstyle.convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "E402"]
"./tests/*.py" = ["PLR2004"]

[tool.ruff.lint.pylint]
max-args = 12

[tool.pyright]
pythonVersion = "3.12"
venvPath = "."
venv = ".venv"
include = ["./src"]
exclude = ["**/node_modules", "**/__pycache__"]
stubPath = "./stubs"
reportMissingImports = true
reportMissingTypeStubs = false
userFileIndexingLimit = -1
useLibraryCodeForTypes = true

[tool.pyright.analysis]
diagnosticMode = "workspace"
typeCheckingMode = "strict"

[tool.hatch.metadata]
allow-direct-references = true
